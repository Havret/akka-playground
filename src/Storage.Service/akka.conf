akka {
  loglevel = info

  actor {
    provider = cluster
		deployment {
	  /book-query-handlers {
		router = round-robin-pool
		resizer {
            enabled = on
            lower-bound = 1
            upper-bound = 10
        }
	  }
	}
  }

  remote {
    dot-netty.tcp {
      port = 0
      hostname = localhost
    }
  }

  cluster {
    seed-nodes = ["akka.tcp://akka-playground@127.0.0.1:4053"]
    roles = [Storage]
    log-info = off
  }
  persistence {
    journal {
      plugin = "akka.persistence.journal.sql-server"
      sql-server {
        # qualified type name of the SQL Server persistence journal actor
        class = "Akka.Persistence.SqlServer.Journal.SqlServerJournal, Akka.Persistence.SqlServer"

        # dispatcher used to drive journal actor
        plugin-dispatcher = "akka.actor.default-dispatcher"

        # connection string used for database access
        connection-string = "Data Source=(localdb)\\MSSQLLocalDB;Initial Catalog=InventoryManagement;Integrated Security=True;Connect Timeout=30;Encrypt=False;TrustServerCertificate=False;ApplicationIntent=ReadWrite;MultiSubnetFailover=False"

        # default SQL commands timeout
        connection-timeout = 30s

        # SQL server schema name to table corresponding with persistent journal
        schema-name = dbo

        # SQL server table corresponding with persistent journal
        table-name = EventJournal

        # should corresponding journal table be initialized automatically
        auto-initialize = on

        # timestamp provider used for generation of journal entries timestamps
        timestamp-provider = "Akka.Persistence.Sql.Common.Journal.DefaultTimestampProvider, Akka.Persistence.Sql.Common"

        # metadata table
        metadata-table-name = Metadata
      }
    }
  }
}